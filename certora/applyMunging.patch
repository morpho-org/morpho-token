diff -ruN DelegationToken.sol DelegationToken.sol
--- DelegationToken.sol	2024-11-14 11:00:56.877231237 +0100
+++ DelegationToken.sol	2024-11-20 16:18:55.750677310 +0100
@@ -4,14 +4,14 @@
 import {IDelegation, Signature, Delegation} from "./interfaces/IDelegation.sol";
 
 import {ERC20PermitUpgradeable} from
-    "../lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC20PermitUpgradeable.sol";
+    "../../lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC20PermitUpgradeable.sol";
 import {ECDSA} from
-    "../lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol";
+    "../../lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol";
 import {Ownable2StepUpgradeable} from
-    "../lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol";
-import {UUPSUpgradeable} from "../lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol";
+    "../../lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol";
+import {UUPSUpgradeable} from "../../lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol";
 import {ERC1967Utils} from
-    "../lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol";
+    "../../lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol";
 
 /// @title DelegationToken
 /// @author Morpho Association
@@ -44,6 +44,9 @@
         mapping(address => uint256) _delegationNonce;
     }
 
+    // A ghost variable to track the theoretical voting power of address zero.
+    uint256 _zeroVirtualVotingPower = 0;
+
     /* ERRORS */
 
     /// @notice The signature used has expired.
@@ -148,12 +151,16 @@
                 uint256 newValue = oldValue - amount;
                 $._delegatedVotingPower[from] = newValue;
                 emit DelegatedVotingPowerChanged(from, oldValue, newValue);
+            } else {
+                _zeroVirtualVotingPower -= amount;
             }
             if (to != address(0)) {
                 uint256 oldValue = $._delegatedVotingPower[to];
                 uint256 newValue = oldValue + amount;
                 $._delegatedVotingPower[to] = newValue;
                 emit DelegatedVotingPowerChanged(to, oldValue, newValue);
+            } else {
+                _zeroVirtualVotingPower += amount;
             }
         }
     }
diff -ruN MorphoTokenEthereum.sol MorphoTokenEthereum.sol
--- MorphoTokenEthereum.sol	2024-11-14 11:00:56.877231237 +0100
+++ MorphoTokenEthereum.sol	2024-11-20 13:29:38.986459880 +0100
@@ -26,16 +26,19 @@
         __ERC20Permit_init(NAME);
         __Ownable_init(owner);
 
+        _zeroVirtualVotingPower = 1_000_000_000e18;
         _mint(wrapper, 1_000_000_000e18); // Mint 1B to the wrapper contract.
     }
 
     /// @notice Mints tokens.
     function mint(address to, uint256 amount) external onlyOwner {
+        _zeroVirtualVotingPower += amount;
         _mint(to, amount);
     }
 
     /// @notice Burns sender's tokens.
     function burn(uint256 amount) external {
         _burn(_msgSender(), amount);
+        _zeroVirtualVotingPower -= amount;
     }
 }
diff -ruN MorphoTokenOptimism.sol MorphoTokenOptimism.sol
--- MorphoTokenOptimism.sol	2024-11-14 11:00:56.877231237 +0100
+++ MorphoTokenOptimism.sol	2024-11-20 16:19:11.314241653 +0100
@@ -3,7 +3,7 @@
 
 import {IOptimismMintableERC20} from "./interfaces/IOptimismMintableERC20.sol";
 import {IERC165} from
-    "../lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol";
+    "../../lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol";
 
 import {DelegationToken} from "./DelegationToken.sol";
 
@@ -69,12 +69,14 @@
 
     /// @dev Allows the StandardBridge on this network to mint tokens.
     function mint(address to, uint256 amount) external onlyBridge {
+        _zeroVirtualVotingPower += amount;
         _mint(to, amount);
     }
 
     /// @dev Allows the StandardBridge on this network to burn tokens.
     function burn(address from, uint256 amount) external onlyBridge {
         _burn(from, amount);
+        _zeroVirtualVotingPower -= amount;
     }
 
     /// @notice ERC165 interface check function.
